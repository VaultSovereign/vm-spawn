name: Deploy Service

on:
  workflow_dispatch:
    inputs:
      env:
        description: "Kubernetes namespace/environment"
        required: true
        default: "aurora-staging"
      release:
        description: "Helm release name"
        required: true
        default: "vaultmesh"
      chart_path:
        description: "Helm chart path"
        required: true
        default: "charts/vaultmesh-confidential"
      values_yaml:
        description: "Values file path"
        required: true
        default: "charts/vaultmesh-confidential/values-example.yaml"
      dry_run:
        description: "Render only (no cluster deploy)"
        required: true
        default: "true"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Helm
        uses: azure/setup-helm@v4

      - name: Helm lint chart
        run: |
          helm lint "${{ github.event.inputs.chart_path }}"

      - name: Dry-run render (no cluster)
        if: ${{ github.event.inputs.dry_run == 'true' }}
        run: |
          helm upgrade --install "${{ github.event.inputs.release }}" "${{ github.event.inputs.chart_path }}" \
            -f "${{ github.event.inputs.values_yaml }}" \
            --namespace "${{ github.event.inputs.env }}" \
            --create-namespace \
            --dry-run --debug

      - name: Configure kubeconfig from secret
        if: ${{ github.event.inputs.dry_run != 'true' }}
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        run: |
          mkdir -p "$HOME/.kube"
          if [ -z "${KUBE_CONFIG_DATA}" ]; then
            echo "KUBE_CONFIG_DATA not set; cannot deploy. Set repo secret with base64 kubeconfig." >&2
            exit 1
          fi
          echo "$KUBE_CONFIG_DATA" | base64 -d > "$HOME/.kube/config"
          chmod 600 "$HOME/.kube/config"

      - name: Helm upgrade/install
        if: ${{ github.event.inputs.dry_run != 'true' }}
        run: |
          helm upgrade --install "${{ github.event.inputs.release }}" "${{ github.event.inputs.chart_path }}" \
            -f "${{ github.event.inputs.values_yaml }}" \
            --namespace "${{ github.event.inputs.env }}" \
            --create-namespace

