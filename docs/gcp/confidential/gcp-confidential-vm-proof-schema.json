{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "VaultMesh ReadProof for GCP Confidential Computing",
  "description": "Cryptographic proof of computation on GCP Confidential VMs with GPU attestation",
  "type": "object",
  "required": [
    "proof_type",
    "timestamp",
    "gcp_attestation",
    "vaultmesh_binding"
  ],
  "properties": {
    "proof_type": {
      "type": "string",
      "enum": [
        "vaultmesh-confidential-compute",
        "vaultmesh-confidential-compute-gke"
      ],
      "description": "Type of proof: VM-based or Kubernetes-based"
    },
    "timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "RFC 3339 timestamp when this proof was generated"
    },
    "pod_metadata": {
      "type": "object",
      "description": "Pod/instance metadata (GKE only)",
      "properties": {
        "name": {
          "type": "string",
          "description": "Pod name or VM instance name"
        },
        "namespace": {
          "type": "string",
          "description": "Kubernetes namespace (GKE) or 'vm' (Terraform)"
        },
        "node": {
          "type": "string",
          "description": "Node name or instance name"
        },
        "zone": {
          "type": "string",
          "description": "GCP zone (e.g., us-central1-a)"
        },
        "cluster": {
          "type": "string",
          "description": "GKE cluster name (GKE only)"
        }
      }
    },
    "gcp_attestation": {
      "type": "object",
      "description": "Google Cloud Confidential Computing attestation",
      "required": [
        "tee_type",
        "project_id"
      ],
      "properties": {
        "tee_type": {
          "type": "string",
          "enum": [
            "TDX",
            "SEV",
            "SEV-SNP"
          ],
          "description": "Trusted Execution Environment type"
        },
        "project_id": {
          "type": "string",
          "description": "GCP Project ID"
        },
        "quote": {
          "type": "string",
          "description": "Base64-encoded TEE attestation quote from GCP attestation verifier"
        },
        "quote_type": {
          "type": "string",
          "enum": [
            "TDX_QUOTE",
            "SEV_SNP_REPORT"
          ],
          "description": "Format of the attestation quote"
        },
        "verification_timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "When Google's attestation service verified this quote"
        },
        "attestation_response": {
          "type": "object",
          "description": "Full response from Google Confidential Computing API",
          "additionalProperties": true
        }
      }
    },
    "rfc3161_timestamp": {
      "type": "object",
      "description": "RFC 3161 timestamp from Timestamp Authority (optional but recommended)",
      "properties": {
        "tsr_token": {
          "type": "string",
          "description": "Base64-encoded RFC 3161 timestamp response token"
        },
        "timestamp_authority": {
          "type": "string",
          "enum": [
            "freetsa.org",
            "enterprise"
          ],
          "description": "Which TSA issued this token"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp from the TSA"
        },
        "serial_number": {
          "type": "string",
          "description": "RFC 3161 token serial number"
        }
      }
    },
    "gpu_metrics": {
      "type": "object",
      "description": "GPU utilization at proof generation time",
      "properties": {
        "gpu_type": {
          "type": "string",
          "enum": [
            "h100-80gb",
            "a100-80gb",
            "v100-32gb",
            "t4-16gb"
          ],
          "description": "GPU model"
        },
        "gpu_count": {
          "type": "integer",
          "description": "Number of GPUs in use"
        },
        "compute_utilization": {
          "type": "number",
          "minimum": 0,
          "maximum": 100,
          "description": "GPU compute utilization percentage"
        },
        "memory_allocated_gb": {
          "type": "number",
          "description": "GPU memory currently allocated (GB)"
        },
        "memory_free_gb": {
          "type": "number",
          "description": "GPU memory available (GB)"
        },
        "power_draw_watts": {
          "type": "number",
          "description": "Current power draw (watts)"
        },
        "temperature_celsius": {
          "type": "number",
          "description": "GPU die temperature (Â°C)"
        },
        "driver_version": {
          "type": "string",
          "description": "NVIDIA driver version"
        },
        "cuda_version": {
          "type": "string",
          "description": "CUDA toolkit version"
        }
      }
    },
    "vaultmesh_binding": {
      "type": "object",
      "description": "VaultMesh-specific binding information",
      "required": [
        "service"
      ],
      "properties": {
        "service": {
          "type": "string",
          "description": "VaultMesh service name"
        },
        "version": {
          "type": "string",
          "description": "Service version (semver)"
        },
        "pool": {
          "type": "string",
          "description": "Compute pool name (e.g., h100-conf)"
        },
        "merkle_anchor": {
          "type": "string",
          "description": "Merkle root from Remembrancer at proof time"
        },
        "merkle_leaf_index": {
          "type": "integer",
          "description": "Index in Merkle tree audit log"
        },
        "pod_namespace": {
          "type": "string",
          "description": "Kubernetes namespace"
        },
        "workload_id": {
          "type": "string",
          "description": "Unique identifier for this workload/job"
        }
      }
    },
    "chain_ref": {
      "type": "string",
      "pattern": "^(eip155:[0-9]+/(tx|safe):|snapshot:|ipfs:|http).*",
      "description": "Optional on-chain or off-chain reference (EIP-155 format): eip155:1/tx:0x..., eip155:137/safe:0x.../tx:0x..., snapshot:space/proposal/id"
    },
    "computation_metadata": {
      "type": "object",
      "description": "Optional metadata about the computation performed",
      "properties": {
        "task_type": {
          "type": "string",
          "enum": [
            "inference",
            "training",
            "evaluation",
            "validation",
            "other"
          ]
        },
        "model_id": {
          "type": "string",
          "description": "Model identifier or name"
        },
        "model_hash": {
          "type": "string",
          "description": "SHA256 of model weights (for reproducibility)"
        },
        "input_hash": {
          "type": "string",
          "description": "SHA256 of input data"
        },
        "output_hash": {
          "type": "string",
          "description": "SHA256 of computation output"
        },
        "duration_seconds": {
          "type": "number",
          "description": "How long the computation took"
        },
        "cost_usd": {
          "type": "number",
          "description": "Estimated cost of this computation"
        }
      }
    },
    "cryptographic_proofs": {
      "type": "object",
      "description": "Cryptographic signatures and proofs",
      "properties": {
        "gpg_signature": {
          "type": "object",
          "description": "GPG signature over entire proof (Nigredo)",
          "properties": {
            "signature": {
              "type": "string",
              "description": "Armored GPG signature"
            },
            "signer_key_id": {
              "type": "string",
              "description": "GPG key ID that signed this proof"
            },
            "created_timestamp": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "merkle_proof": {
          "type": "array",
          "description": "Merkle proof path from leaf to root (for audit chain)",
          "items": {
            "type": "string"
          }
        },
        "reproducibility_hash": {
          "type": "string",
          "description": "Deterministic hash of this proof (Albedo)"
        },
        "federation_sync_id": {
          "type": "string",
          "description": "ID if this proof was synchronized across peers (Citrinitas)"
        }
      }
    },
    "attestation_chain": {
      "type": "array",
      "description": "Complete chain of attestations (Four Covenants chain)",
      "items": {
        "type": "object",
        "properties": {
          "covenant": {
            "type": "string",
            "enum": [
              "Nigredo",
              "Albedo",
              "Citrinitas",
              "Rubedo"
            ]
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "proof": {
            "type": "string"
          }
        }
      }
    },
    "error": {
      "type": "object",
      "description": "If proof generation failed, error details (should not normally appear in valid proofs)",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  },
  "examples": [
    {
      "proof_type": "vaultmesh-confidential-compute-gke",
      "timestamp": "2025-10-23T14:30:15Z",
      "pod_metadata": {
        "name": "vaultmesh-infer-7d8b3c9a",
        "namespace": "default",
        "node": "gke-vaultmesh-h100-pool-abc123",
        "zone": "us-central1-a",
        "cluster": "vaultmesh-cluster"
      },
      "gcp_attestation": {
        "tee_type": "TDX",
        "project_id": "my-project-12345",
        "quote_type": "TDX_QUOTE",
        "verification_timestamp": "2025-10-23T14:30:12Z",
        "attestation_response": {
          "verified": true,
          "claims": {
            "iss": "https://confidentialcomputing.googleapis.com",
            "aud": "https://vaultmesh.io"
          }
        }
      },
      "rfc3161_timestamp": {
        "timestamp_authority": "freetsa.org",
        "timestamp": "2025-10-23T14:30:15Z",
        "serial_number": "A1B2C3D4E5"
      },
      "gpu_metrics": {
        "gpu_type": "h100-80gb",
        "gpu_count": 1,
        "compute_utilization": 85.3,
        "memory_allocated_gb": 72.5,
        "memory_free_gb": 7.5,
        "power_draw_watts": 620,
        "temperature_celsius": 52,
        "driver_version": "550.100",
        "cuda_version": "12.4"
      },
      "vaultmesh_binding": {
        "service": "inference-worker",
        "version": "v1.2.0",
        "pool": "h100-conf",
        "merkle_anchor": "d5c64aee1234567890abcdef",
        "merkle_leaf_index": 42,
        "pod_namespace": "default",
        "workload_id": "job-20251023-001"
      },
      "chain_ref": "eip155:1/tx:0x1234567890abcdef1234567890abcdef12345678",
      "computation_metadata": {
        "task_type": "inference",
        "model_id": "meta-llama/Llama-2-70b-hf",
        "model_hash": "sha256:abc123...",
        "input_hash": "sha256:def456...",
        "output_hash": "sha256:ghi789...",
        "duration_seconds": 23.5,
        "cost_usd": 0.065
      },
      "cryptographic_proofs": {
        "gpg_signature": {
          "signer_key_id": "DEADBEEF",
          "created_timestamp": "2025-10-23T14:30:16Z"
        },
        "reproducibility_hash": "sha256:final_hash..."
      }
    }
  ],
  "additionalProperties": false
}
